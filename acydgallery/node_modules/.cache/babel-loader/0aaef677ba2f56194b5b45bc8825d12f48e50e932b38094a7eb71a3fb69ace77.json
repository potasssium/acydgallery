{"ast":null,"code":"var _jsxFileName = \"/home/kay/Documents/acydgallery/acydgallery/src/context/CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\n\n// Create cart context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\n\n// Initial state for the cart\nconst initialState = {\n  items: [],\n  isOpen: false,\n  currency: 'USD'\n};\n\n// Cart reducer function to handle different actions\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_ITEM':\n      {\n        const existingItemIndex = state.items.findIndex(item => item.id === action.payload.id);\n        if (existingItemIndex >= 0) {\n          // Item already exists, increase quantity\n          const updatedItems = [...state.items];\n          updatedItems[existingItemIndex] = {\n            ...updatedItems[existingItemIndex],\n            quantity: updatedItems[existingItemIndex].quantity + 1\n          };\n          return {\n            ...state,\n            items: updatedItems\n          };\n        } else {\n          // Add new item with quantity 1\n          return {\n            ...state,\n            items: [...state.items, {\n              ...action.payload,\n              quantity: 1\n            }]\n          };\n        }\n      }\n    case 'REMOVE_ITEM':\n      {\n        const existingItemIndex = state.items.findIndex(item => item.id === action.payload.id);\n        if (existingItemIndex >= 0) {\n          const updatedItems = [...state.items];\n          if (updatedItems[existingItemIndex].quantity > 1) {\n            // Decrease quantity if more than 1\n            updatedItems[existingItemIndex] = {\n              ...updatedItems[existingItemIndex],\n              quantity: updatedItems[existingItemIndex].quantity - 1\n            };\n          } else {\n            // Remove item if quantity is 1\n            updatedItems.splice(existingItemIndex, 1);\n          }\n          return {\n            ...state,\n            items: updatedItems\n          };\n        }\n        return state;\n      }\n    case 'DELETE_ITEM':\n      return {\n        ...state,\n        items: state.items.filter(item => item.id !== action.payload.id)\n      };\n    case 'CLEAR_CART':\n      return {\n        ...state,\n        items: []\n      };\n    case 'TOGGLE_CART':\n      return {\n        ...state,\n        isOpen: !state.isOpen\n      };\n    case 'SET_CURRENCY':\n      return {\n        ...state,\n        currency: action.payload\n      };\n    case 'UPDATE_QUANTITY':\n      return {\n        ...state,\n        items: state.items.map(item => item.id === action.payload.id ? {\n          ...item,\n          quantity: action.payload.quantity\n        } : item)\n      };\n    default:\n      return state;\n  }\n};\n\n// CartProvider component\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(cartReducer, initialState, () => {\n    // Load cart from localStorage on initialization\n    const savedCart = localStorage.getItem('cart');\n    return savedCart ? JSON.parse(savedCart) : initialState;\n  });\n\n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(state));\n  }, [state]);\n\n  // Listen for currency changes\n  useEffect(() => {\n    const handleCurrencyChange = event => {\n      dispatch({\n        type: 'SET_CURRENCY',\n        payload: event.detail.currency\n      });\n    };\n    window.addEventListener('currencyChange', handleCurrencyChange);\n    return () => {\n      window.removeEventListener('currencyChange', handleCurrencyChange);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the cart context\n_s(CartProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","CartContext","initialState","items","isOpen","currency","cartReducer","state","action","type","existingItemIndex","findIndex","item","id","payload","updatedItems","quantity","splice","filter","map","CartProvider","children","_s","dispatch","savedCart","localStorage","getItem","JSON","parse","setItem","stringify","handleCurrencyChange","event","detail","window","addEventListener","removeEventListener","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","Error","$RefreshReg$"],"sources":["/home/kay/Documents/acydgallery/acydgallery/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\n\n// Create cart context\nconst CartContext = createContext();\n\n// Initial state for the cart\nconst initialState = {\n  items: [],\n  isOpen: false,\n  currency: 'USD',\n};\n\n// Cart reducer function to handle different actions\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_ITEM': {\n      const existingItemIndex = state.items.findIndex(item => item.id === action.payload.id);\n      \n      if (existingItemIndex >= 0) {\n        // Item already exists, increase quantity\n        const updatedItems = [...state.items];\n        updatedItems[existingItemIndex] = {\n          ...updatedItems[existingItemIndex],\n          quantity: updatedItems[existingItemIndex].quantity + 1\n        };\n        return { ...state, items: updatedItems };\n      } else {\n        // Add new item with quantity 1\n        return { \n          ...state, \n          items: [...state.items, { ...action.payload, quantity: 1 }] \n        };\n      }\n    }\n    \n    case 'REMOVE_ITEM': {\n      const existingItemIndex = state.items.findIndex(item => item.id === action.payload.id);\n      \n      if (existingItemIndex >= 0) {\n        const updatedItems = [...state.items];\n        if (updatedItems[existingItemIndex].quantity > 1) {\n          // Decrease quantity if more than 1\n          updatedItems[existingItemIndex] = {\n            ...updatedItems[existingItemIndex],\n            quantity: updatedItems[existingItemIndex].quantity - 1\n          };\n        } else {\n          // Remove item if quantity is 1\n          updatedItems.splice(existingItemIndex, 1);\n        }\n        return { ...state, items: updatedItems };\n      }\n      return state;\n    }\n    \n    case 'DELETE_ITEM':\n      return {\n        ...state,\n        items: state.items.filter(item => item.id !== action.payload.id)\n      };\n      \n    case 'CLEAR_CART':\n      return {\n        ...state,\n        items: []\n      };\n      \n    case 'TOGGLE_CART':\n      return {\n        ...state,\n        isOpen: !state.isOpen\n      };\n      \n    case 'SET_CURRENCY':\n      return {\n        ...state,\n        currency: action.payload\n      };\n      \n    case 'UPDATE_QUANTITY':\n      return {\n        ...state,\n        items: state.items.map(item => \n          item.id === action.payload.id \n            ? { ...item, quantity: action.payload.quantity } \n            : item\n        )\n      };\n      \n    default:\n      return state;\n  }\n};\n\n// CartProvider component\nexport const CartProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(cartReducer, initialState, () => {\n    // Load cart from localStorage on initialization\n    const savedCart = localStorage.getItem('cart');\n    return savedCart ? JSON.parse(savedCart) : initialState;\n  });\n  \n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(state));\n  }, [state]);\n  \n  // Listen for currency changes\n  useEffect(() => {\n    const handleCurrencyChange = (event) => {\n      dispatch({ \n        type: 'SET_CURRENCY', \n        payload: event.detail.currency \n      });\n    };\n    \n    window.addEventListener('currencyChange', handleCurrencyChange);\n    \n    return () => {\n      window.removeEventListener('currencyChange', handleCurrencyChange);\n    };\n  }, []);\n  \n  return (\n    <CartContext.Provider value={{ state, dispatch }}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n\n// Custom hook to use the cart context\nexport const useCart = () => {\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}